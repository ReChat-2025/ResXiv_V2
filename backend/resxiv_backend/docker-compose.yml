version: '3.8'

services:
  # FastAPI Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=resxiv
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=resxiv_chat
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - HOST=0.0.0.0
      - PORT=8000
      - WORKERS=4
      - RELOAD=false
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./uploads:/app/uploads
      - ./downloads:/app/downloads
      - ./static:/app/static
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: resxiv
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    environment:
      MONGO_INITDB_DATABASE: resxiv_chat
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  mongodb_data:
  redis_data: 