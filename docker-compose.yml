version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://35.154.171.72:8000
      - NODE_ENV=production
    depends_on:
      - backend
    networks:
      - resxiv-network

  # Backend Service
  backend:
    build:
      context: ./backend/resxiv_backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=resxiv_v2
      - POSTGRES_USER=resxiv_user
      - POSTGRES_PASSWORD=resxiv_password
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DB=resxiv_v2
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - HOST=0.0.0.0
      - PORT=8000
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./backend/resxiv_backend/uploads:/app/uploads
      - ./backend/resxiv_backend/downloads:/app/downloads
      - ./backend/resxiv_backend/static:/app/static
    networks:
      - resxiv-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=resxiv_v2
      - POSTGRES_USER=resxiv_user
      - POSTGRES_PASSWORD=resxiv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - resxiv-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U resxiv_user -d resxiv_v2"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    environment:
      - MONGO_INITDB_DATABASE=resxiv_v2
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27018:27017"
    networks:
      - resxiv-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/resxiv_v2 --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - resxiv-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  resxiv-network:
    driver: bridge 